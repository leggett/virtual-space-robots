// smart_turret by mageowl
// forked from turret by mageowl
use("robot_api", <robot>)

fn(<turn_to>): {
    if(lt(p(0), 180)): {
        robot.turn(p(0))
    } else: {
        robot.turn(-(p(0), 360))
    }
}

fn(<mod>): -(p(0), *(p(1), round(/(p(0), p(1)))))
fn(<inverse>): mod(+(p(0), 180), 360)

let(<last_angle>): none
while: {
    let(<i>): 0
    let(<max_dist>): 0
    let(<max_angle>): 0

    while: {
        if(eq(robot.raycast, "ship")): {
            robot.shoot()
        }
        
        if(
            and(
                gt(robot.raycast_dist, max_dist), 
                not(eq(last_angle, inverse(i)))
            )
        ): {
            max_dist: robot.raycast_dist
            max_angle: i
        }

        robot.turn(10)
        i: +(i, 10)

        if(eq(i, 360)):
            return(false)
    }
    
    turn_to(max_angle)
    robot.move(-(max_dist, 50))
    turn_to(-(360, max_angle))

    last_angle: max_angle
}